name: Deploy to server
on:
  workflow_call:
    inputs:
      stage-to:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      RSYNC_OPTS: -aP --no-p --no-g --no-t --compress --del -e "ssh -o StrictHostKeyChecking=no"
    outputs:
      skip-deploy: ${{ steps.artifact.outcome == 'success' }}
    steps:
    # Install our private key for uploading deliverable
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{secrets.UPLOADER_SSH_KEY}}
    # Download the artefact
    - id: artifact
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: sldr
    # Upload results
    - name: Upload flattened SLDR to /ldml-api/data/${{ inputs.stage-to }}
      if: steps.artifact.outcome == 'success'
      run: rsync ${{ env.RSYNC_OPTS }} --chmod=Dug=rwx flat unflat ${{ secrets.UPLOAD_TARGET }}/sites/s/ldml-api/data/${{ inputs.stage-to }}/

  dispatch:
    runs-on: ubuntu-latest
    needs: deploy
    if: needs.deploy.outputs.skip-deploy == false
    steps:
    - name: Trigger langtags rebuild
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.REPO_DISPATCH_TOKEN }}
        repository: silnrsi/langtags
        event-type: sldr-deployed
        client-payload: >- 
          {
            "environment": [ ${{ github.ref_name == 'release' && 'production' || 'staging' }} ],
            "run_id": ${{ github.run_id }}
          }
