name: Deploy to server
on:
  workflow_call:
    inputs:
      stage-to:
        required: true
        type: string
      artifact-id:
        required: true
        type: string
    secrets:
      uploader-key:
        required: true
      server-address:
        required: true
      repository-dispatch-pat:
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    if: inputs.artifact-id
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4

      - id: artifact
        uses: actions/download-artifact@v4
        with:
          name: sldr
      
      - name: Package
        run: zip -r9 sldr.zip flat unflat
      
      - name: Time based build id
        id: build-id
        run: date --utc +stamp=%g%V%w.%H%M >> $GITHUB_OUTPUT

      - name: Production
        if: ${{ github.ref_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          name: Production SLDR data ${{ steps.build-id.outputs.stamp }}
          tag_name: ${{ steps.build-id.outputs.stamp }}
          generate_release_notes: true
          make_latest: true
          files: sldr.zip

      - name: Staging
        if: ${{ github.ref_name == 'master' }}
        uses: softprops/action-gh-release@v2
        with:
          name: Staging SLDR data ${{ steps.build-id.outputs.stamp }}
          prerelease: true
          tag_name: staging
          target_commitish: master
          files: sldr.zip

  deploy:
    runs-on: ubuntu-latest
    if: inputs.artifact-id
    env:
      RSYNC_OPTS: -aP --no-p --no-g --no-t --compress --del -e "ssh -o StrictHostKeyChecking=no"
    steps:
    # Install our private key for uploading deliverable
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{secrets.uploader-key}}
    # Download the artefact
    - uses: actions/download-artifact@v4
      with:
        name: sldr
    # Upload results
    - name: Upload flattened SLDR to /ldml-api/data/${{ inputs.stage-to }}
      run: >-
        rsync ${{env.RSYNC_OPTS}}
        --chmod=Dug=rwx
        flat unflat
        ${{secrets.server-address}}/sites/s/ldml-api/data/${{ inputs.stage-to }}/

  dispatch:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Trigger langtags rebuild
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.repository-dispatch-pat }}
        repository: silnrsi/langtags
        event-type: sldr-deployed
        client-payload: >- 
          {
            "release": "${{ github.ref_name == 'release' }}",
            "artifact-id": ${{ inputs.artifact-id }}
          }
