# This is a basic workflow to help you get started with Actions

name: Flatten SLDR and publish release branch to production

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    paths:
    - sldr/**
    branches: [ release ]
  pull_request:
    paths:
    - sldr/**
    branches: [ release ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:      
    # Setup Python environment.
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    # Install SLDR tools
    - name: Setup sldrtools
      run: pip install 'git+https://github.com/silnrsi/sldrtools'
      
    # Checks-out repository under $GITHUB_WORKSPACE.
    - uses: actions/checkout@v2

    # Generate 'unflattend' SLDR
    - name: Generate unflattened sldr
      run: ldmlflatten -o unflat -i sldr -a -c -g
    
    # Flatten SLDR
    - name: Generate flattened sldr
      run: ldmlflatten -o flat -i sldr -a -A -g
    
    # Upload artefact
    - name: Upload artefact
      uses: actions/upload-artifact@v2
      with:
        name: sldr
        path: |
           flat/
           unflat/

# Deploy built artefacts to the secrets.UPLOAD_TARGET
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      STAGE: sldr
      RSYNC_OPTS: -aP --no-p --no-g --no-t --compress --del -e "ssh -o StrictHostKeyChecking=no"
    steps:
    # Install our private key for uploading deliverable
    - uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{secrets.UPLOADER_SSH_KEY}}
    
    # Download the aretefact
    - uses: actions/download-artifact@v2
      with:
        name: sldr
        
    # Upload results
    - name: Upload flattened SLDR to /ldml-api/data/${{env.STAGE}}
      run: rsync ${{env.RSYNC_OPTS}} --chmod=Dug=rwx flat unflat ${{secrets.UPLOAD_TARGET}}/sites/s/ldml-api/data/${{env.STAGE}}/
  
